add_library(sDIY INTERFACE)
target_include_directories(sDIY SYSTEM INTERFACE
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
  $<INSTALL_INTERFACE:include>)
install(TARGETS sDIY EXPORT sDIY)
install(EXPORT sDIY DESTINATION ${sensei_CMAKE_INSTALL_CMAKEDIR})
install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/sdiy"
  DESTINATION include)

add_library(opts INTERFACE)
target_include_directories(opts
  SYSTEM INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})
install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/opts"
  DESTINATION include)

add_subdirectory(pugixml)

#add_subdirectory(ImageTester)

include(SVTKconfig.cmake)
add_subdirectory(SVTK)
add_subdirectory(pysvtk)

set(HAMR_ENABLE_CUDA ${SENSEI_ENABLE_CUDA} CACHE BOOL "")
set(HAMR_ENABLE_HIP ${SENSEI_ENABLE_HIP} CACHE BOOL "")
set(HAMR_ENABLE_OPENMP ${SENSEI_ENABLE_OPENMP} CACHE BOOL "")
set(HAMR_CUDA_ARCHITECTURES "${SENSEI_CUDA_ARCHITECTURES}" CACHE STRING "")
#TODO set openmp targets
set(HAMR_CUDA_OBJECTS OFF CACHE BOOL "")
set(HAMR_HIP_OBJECTS OFF CACHE BOOL "")
set(HAMR_OPENMP_OBJECTS OFF CACHE BOOL "")
set(HAMR_ENABLE_PYTHON ${SENSEI_ENABLE_PYTHON} CACHE BOOL "")
add_subdirectory(HAMR)
